'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5420
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.5420.
'
Namespace WSV6
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ExportDataSetToBranchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoUpdateDataSetToHQOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportRewardPointSummaryAtHQOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportSummarySaleByDateToHQOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchMemberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddUpdateMembersAtQHOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchSummaryPointOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSoftwareVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSoftwareVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ContentLastUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ContentSectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Member_UpdatePackageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Payment_PaybyvoucherOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WriteErrorLogFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ClspRoMiSeForWeb.My.MySettings.Default.ClspRoMiSeForWeb_WSV6_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ExportDataSetToBranchCompleted As ExportDataSetToBranchCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoUpdateDataSetToHQCompleted As AutoUpdateDataSetToHQCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportRewardPointSummaryAtHQCompleted As ImportRewardPointSummaryAtHQCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportSummarySaleByDateToHQCompleted As ImportSummarySaleByDateToHQCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchMemberCompleted As SearchMemberCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberCompleted As GetMemberCompletedEventHandler
        
        '''<remarks/>
        Public Event AddUpdateMembersAtQHCompleted As AddUpdateMembersAtQHCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchSummaryPointCompleted As SearchSummaryPointCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSoftwareVersionCompleted As UpdateSoftwareVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSoftwareVersionCompleted As GetSoftwareVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event ContentLastUpdateCompleted As ContentLastUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event ContentSectionCompleted As ContentSectionCompletedEventHandler
        
        '''<remarks/>
        Public Event Member_UpdatePackageCompleted As Member_UpdatePackageCompletedEventHandler
        
        '''<remarks/>
        Public Event Payment_PaybyvoucherCompleted As Payment_PaybyvoucherCompletedEventHandler
        
        '''<remarks/>
        Public Event WriteErrorLogFileCompleted As WriteErrorLogFileCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/ExportDataSetToBranch", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExportDataSetToBranch(<System.Xml.Serialization.XmlArrayItemAttribute("DataSet")> ByRef dsResultList() As System.Data.DataSet, ByVal RegionID As Integer, ByRef xResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("ExportDataSetToBranch", New Object() {dsResultList, RegionID, xResultText})
            dsResultList = CType(results(1),System.Data.DataSet())
            xResultText = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExportDataSetToBranchAsync(ByVal dsResultList() As System.Data.DataSet, ByVal RegionID As Integer, ByVal xResultText As String)
            Me.ExportDataSetToBranchAsync(dsResultList, RegionID, xResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExportDataSetToBranchAsync(ByVal dsResultList() As System.Data.DataSet, ByVal RegionID As Integer, ByVal xResultText As String, ByVal userState As Object)
            If (Me.ExportDataSetToBranchOperationCompleted Is Nothing) Then
                Me.ExportDataSetToBranchOperationCompleted = AddressOf Me.OnExportDataSetToBranchOperationCompleted
            End If
            Me.InvokeAsync("ExportDataSetToBranch", New Object() {dsResultList, RegionID, xResultText}, Me.ExportDataSetToBranchOperationCompleted, userState)
        End Sub
        
        Private Sub OnExportDataSetToBranchOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExportDataSetToBranchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExportDataSetToBranchCompleted(Me, New ExportDataSetToBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/AutoUpdateDataSetToHQ", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoUpdateDataSetToHQ(ByRef dsResult As System.Data.DataSet, ByVal xResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("AutoUpdateDataSetToHQ", New Object() {dsResult, xResultText})
            dsResult = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoUpdateDataSetToHQAsync(ByVal dsResult As System.Data.DataSet, ByVal xResultText As String)
            Me.AutoUpdateDataSetToHQAsync(dsResult, xResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoUpdateDataSetToHQAsync(ByVal dsResult As System.Data.DataSet, ByVal xResultText As String, ByVal userState As Object)
            If (Me.AutoUpdateDataSetToHQOperationCompleted Is Nothing) Then
                Me.AutoUpdateDataSetToHQOperationCompleted = AddressOf Me.OnAutoUpdateDataSetToHQOperationCompleted
            End If
            Me.InvokeAsync("AutoUpdateDataSetToHQ", New Object() {dsResult, xResultText}, Me.AutoUpdateDataSetToHQOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoUpdateDataSetToHQOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoUpdateDataSetToHQCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoUpdateDataSetToHQCompleted(Me, New AutoUpdateDataSetToHQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/ImportRewardPointSummaryAtHQ", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportRewardPointSummaryAtHQ(ByRef dsData As System.Data.DataSet, ByRef xResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("ImportRewardPointSummaryAtHQ", New Object() {dsData, xResultText})
            dsData = CType(results(1),System.Data.DataSet)
            xResultText = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportRewardPointSummaryAtHQAsync(ByVal dsData As System.Data.DataSet, ByVal xResultText As String)
            Me.ImportRewardPointSummaryAtHQAsync(dsData, xResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportRewardPointSummaryAtHQAsync(ByVal dsData As System.Data.DataSet, ByVal xResultText As String, ByVal userState As Object)
            If (Me.ImportRewardPointSummaryAtHQOperationCompleted Is Nothing) Then
                Me.ImportRewardPointSummaryAtHQOperationCompleted = AddressOf Me.OnImportRewardPointSummaryAtHQOperationCompleted
            End If
            Me.InvokeAsync("ImportRewardPointSummaryAtHQ", New Object() {dsData, xResultText}, Me.ImportRewardPointSummaryAtHQOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportRewardPointSummaryAtHQOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportRewardPointSummaryAtHQCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportRewardPointSummaryAtHQCompleted(Me, New ImportRewardPointSummaryAtHQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/ImportSummarySaleByDateToHQ", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportSummarySaleByDateToHQ(ByRef dsData As System.Data.DataSet, ByRef xResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("ImportSummarySaleByDateToHQ", New Object() {dsData, xResultText})
            dsData = CType(results(1),System.Data.DataSet)
            xResultText = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportSummarySaleByDateToHQAsync(ByVal dsData As System.Data.DataSet, ByVal xResultText As String)
            Me.ImportSummarySaleByDateToHQAsync(dsData, xResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportSummarySaleByDateToHQAsync(ByVal dsData As System.Data.DataSet, ByVal xResultText As String, ByVal userState As Object)
            If (Me.ImportSummarySaleByDateToHQOperationCompleted Is Nothing) Then
                Me.ImportSummarySaleByDateToHQOperationCompleted = AddressOf Me.OnImportSummarySaleByDateToHQOperationCompleted
            End If
            Me.InvokeAsync("ImportSummarySaleByDateToHQ", New Object() {dsData, xResultText}, Me.ImportSummarySaleByDateToHQOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportSummarySaleByDateToHQOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportSummarySaleByDateToHQCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportSummarySaleByDateToHQCompleted(Me, New ImportSummarySaleByDateToHQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/SearchMember", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchMember(ByVal searchBy As SearchMemberBy, ByVal paramSearch As String, ByRef memberData() As Member_Data, ByRef dsMemberData As System.Data.DataSet, ByRef strResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("SearchMember", New Object() {searchBy, paramSearch, memberData, dsMemberData, strResultText})
            memberData = CType(results(1),Member_Data())
            dsMemberData = CType(results(2),System.Data.DataSet)
            strResultText = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchMemberAsync(ByVal searchBy As SearchMemberBy, ByVal paramSearch As String, ByVal memberData() As Member_Data, ByVal dsMemberData As System.Data.DataSet, ByVal strResultText As String)
            Me.SearchMemberAsync(searchBy, paramSearch, memberData, dsMemberData, strResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchMemberAsync(ByVal searchBy As SearchMemberBy, ByVal paramSearch As String, ByVal memberData() As Member_Data, ByVal dsMemberData As System.Data.DataSet, ByVal strResultText As String, ByVal userState As Object)
            If (Me.SearchMemberOperationCompleted Is Nothing) Then
                Me.SearchMemberOperationCompleted = AddressOf Me.OnSearchMemberOperationCompleted
            End If
            Me.InvokeAsync("SearchMember", New Object() {searchBy, paramSearch, memberData, dsMemberData, strResultText}, Me.SearchMemberOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchMemberOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchMemberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchMemberCompleted(Me, New SearchMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/GetMember", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMember(ByVal searchBy As Integer, ByVal memberCode As String, ByVal memberMobile As String, ByRef memberData As Member_Data, ByRef dsMemberData As System.Data.DataSet, ByRef strResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("GetMember", New Object() {searchBy, memberCode, memberMobile, memberData, dsMemberData, strResultText})
            memberData = CType(results(1),Member_Data)
            dsMemberData = CType(results(2),System.Data.DataSet)
            strResultText = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberAsync(ByVal searchBy As Integer, ByVal memberCode As String, ByVal memberMobile As String, ByVal memberData As Member_Data, ByVal dsMemberData As System.Data.DataSet, ByVal strResultText As String)
            Me.GetMemberAsync(searchBy, memberCode, memberMobile, memberData, dsMemberData, strResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberAsync(ByVal searchBy As Integer, ByVal memberCode As String, ByVal memberMobile As String, ByVal memberData As Member_Data, ByVal dsMemberData As System.Data.DataSet, ByVal strResultText As String, ByVal userState As Object)
            If (Me.GetMemberOperationCompleted Is Nothing) Then
                Me.GetMemberOperationCompleted = AddressOf Me.OnGetMemberOperationCompleted
            End If
            Me.InvokeAsync("GetMember", New Object() {searchBy, memberCode, memberMobile, memberData, dsMemberData, strResultText}, Me.GetMemberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberCompleted(Me, New GetMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/AddUpdateMembersAtQH", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddUpdateMembersAtQH(ByVal fromShopID As Integer, ByVal destinationShopID As Integer, ByVal dsData As System.Data.DataSet, ByRef xResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("AddUpdateMembersAtQH", New Object() {fromShopID, destinationShopID, dsData, xResultText})
            xResultText = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddUpdateMembersAtQHAsync(ByVal fromShopID As Integer, ByVal destinationShopID As Integer, ByVal dsData As System.Data.DataSet, ByVal xResultText As String)
            Me.AddUpdateMembersAtQHAsync(fromShopID, destinationShopID, dsData, xResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddUpdateMembersAtQHAsync(ByVal fromShopID As Integer, ByVal destinationShopID As Integer, ByVal dsData As System.Data.DataSet, ByVal xResultText As String, ByVal userState As Object)
            If (Me.AddUpdateMembersAtQHOperationCompleted Is Nothing) Then
                Me.AddUpdateMembersAtQHOperationCompleted = AddressOf Me.OnAddUpdateMembersAtQHOperationCompleted
            End If
            Me.InvokeAsync("AddUpdateMembersAtQH", New Object() {fromShopID, destinationShopID, dsData, xResultText}, Me.AddUpdateMembersAtQHOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddUpdateMembersAtQHOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddUpdateMembersAtQHCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddUpdateMembersAtQHCompleted(Me, New AddUpdateMembersAtQHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/SearchSummaryPoint", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchSummaryPoint(ByVal memberID As Integer, ByRef memberData As SummaryPoint_Data, ByRef strResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("SearchSummaryPoint", New Object() {memberID, memberData, strResultText})
            memberData = CType(results(1),SummaryPoint_Data)
            strResultText = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchSummaryPointAsync(ByVal memberID As Integer, ByVal memberData As SummaryPoint_Data, ByVal strResultText As String)
            Me.SearchSummaryPointAsync(memberID, memberData, strResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchSummaryPointAsync(ByVal memberID As Integer, ByVal memberData As SummaryPoint_Data, ByVal strResultText As String, ByVal userState As Object)
            If (Me.SearchSummaryPointOperationCompleted Is Nothing) Then
                Me.SearchSummaryPointOperationCompleted = AddressOf Me.OnSearchSummaryPointOperationCompleted
            End If
            Me.InvokeAsync("SearchSummaryPoint", New Object() {memberID, memberData, strResultText}, Me.SearchSummaryPointOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchSummaryPointOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchSummaryPointCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchSummaryPointCompleted(Me, New SearchSummaryPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/UpdateSoftwareVersion", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateSoftwareVersion(ByVal ComputerID As Integer, ByVal ProductLevelID As Integer, ByVal IPAddress As String, ByVal FrontVersion As String, ByVal FrontFileDate As String, ByVal FrontUpdateDate As String, ByVal backOfficeVersion As String, ByVal backOfficeFileDate As String, ByVal backOfficeUpdateDate As String, ByVal InvVersion As String, ByVal InvFileDate As String, ByVal InvUpdateDate As String, ByRef strResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateSoftwareVersion", New Object() {ComputerID, ProductLevelID, IPAddress, FrontVersion, FrontFileDate, FrontUpdateDate, backOfficeVersion, backOfficeFileDate, backOfficeUpdateDate, InvVersion, InvFileDate, InvUpdateDate, strResultText})
            strResultText = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateSoftwareVersionAsync(ByVal ComputerID As Integer, ByVal ProductLevelID As Integer, ByVal IPAddress As String, ByVal FrontVersion As String, ByVal FrontFileDate As String, ByVal FrontUpdateDate As String, ByVal backOfficeVersion As String, ByVal backOfficeFileDate As String, ByVal backOfficeUpdateDate As String, ByVal InvVersion As String, ByVal InvFileDate As String, ByVal InvUpdateDate As String, ByVal strResultText As String)
            Me.UpdateSoftwareVersionAsync(ComputerID, ProductLevelID, IPAddress, FrontVersion, FrontFileDate, FrontUpdateDate, backOfficeVersion, backOfficeFileDate, backOfficeUpdateDate, InvVersion, InvFileDate, InvUpdateDate, strResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSoftwareVersionAsync(ByVal ComputerID As Integer, ByVal ProductLevelID As Integer, ByVal IPAddress As String, ByVal FrontVersion As String, ByVal FrontFileDate As String, ByVal FrontUpdateDate As String, ByVal backOfficeVersion As String, ByVal backOfficeFileDate As String, ByVal backOfficeUpdateDate As String, ByVal InvVersion As String, ByVal InvFileDate As String, ByVal InvUpdateDate As String, ByVal strResultText As String, ByVal userState As Object)
            If (Me.UpdateSoftwareVersionOperationCompleted Is Nothing) Then
                Me.UpdateSoftwareVersionOperationCompleted = AddressOf Me.OnUpdateSoftwareVersionOperationCompleted
            End If
            Me.InvokeAsync("UpdateSoftwareVersion", New Object() {ComputerID, ProductLevelID, IPAddress, FrontVersion, FrontFileDate, FrontUpdateDate, backOfficeVersion, backOfficeFileDate, backOfficeUpdateDate, InvVersion, InvFileDate, InvUpdateDate, strResultText}, Me.UpdateSoftwareVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSoftwareVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSoftwareVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSoftwareVersionCompleted(Me, New UpdateSoftwareVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/GetSoftwareVersion", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSoftwareVersion(ByVal programTypeID As Integer, ByRef softwareData As Softwareversion_Data, ByRef strResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("GetSoftwareVersion", New Object() {programTypeID, softwareData, strResultText})
            softwareData = CType(results(1),Softwareversion_Data)
            strResultText = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareVersionAsync(ByVal programTypeID As Integer, ByVal softwareData As Softwareversion_Data, ByVal strResultText As String)
            Me.GetSoftwareVersionAsync(programTypeID, softwareData, strResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSoftwareVersionAsync(ByVal programTypeID As Integer, ByVal softwareData As Softwareversion_Data, ByVal strResultText As String, ByVal userState As Object)
            If (Me.GetSoftwareVersionOperationCompleted Is Nothing) Then
                Me.GetSoftwareVersionOperationCompleted = AddressOf Me.OnGetSoftwareVersionOperationCompleted
            End If
            Me.InvokeAsync("GetSoftwareVersion", New Object() {programTypeID, softwareData, strResultText}, Me.GetSoftwareVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSoftwareVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSoftwareVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSoftwareVersionCompleted(Me, New GetSoftwareVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/ContentLastUpdate", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ContentLastUpdate(ByVal shopID As Integer, ByVal sectionID As Integer, ByVal limitContent As Integer, ByRef contentData() As News_CategoryData, ByRef strResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("ContentLastUpdate", New Object() {shopID, sectionID, limitContent, contentData, strResultText})
            contentData = CType(results(1),News_CategoryData())
            strResultText = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ContentLastUpdateAsync(ByVal shopID As Integer, ByVal sectionID As Integer, ByVal limitContent As Integer, ByVal contentData() As News_CategoryData, ByVal strResultText As String)
            Me.ContentLastUpdateAsync(shopID, sectionID, limitContent, contentData, strResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ContentLastUpdateAsync(ByVal shopID As Integer, ByVal sectionID As Integer, ByVal limitContent As Integer, ByVal contentData() As News_CategoryData, ByVal strResultText As String, ByVal userState As Object)
            If (Me.ContentLastUpdateOperationCompleted Is Nothing) Then
                Me.ContentLastUpdateOperationCompleted = AddressOf Me.OnContentLastUpdateOperationCompleted
            End If
            Me.InvokeAsync("ContentLastUpdate", New Object() {shopID, sectionID, limitContent, contentData, strResultText}, Me.ContentLastUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnContentLastUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ContentLastUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ContentLastUpdateCompleted(Me, New ContentLastUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/ContentSection", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ContentSection(ByVal sectionData() As News_SectionData, ByRef strResultText As String) As Boolean
            Dim results() As Object = Me.Invoke("ContentSection", New Object() {sectionData, strResultText})
            strResultText = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ContentSectionAsync(ByVal sectionData() As News_SectionData, ByVal strResultText As String)
            Me.ContentSectionAsync(sectionData, strResultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ContentSectionAsync(ByVal sectionData() As News_SectionData, ByVal strResultText As String, ByVal userState As Object)
            If (Me.ContentSectionOperationCompleted Is Nothing) Then
                Me.ContentSectionOperationCompleted = AddressOf Me.OnContentSectionOperationCompleted
            End If
            Me.InvokeAsync("ContentSection", New Object() {sectionData, strResultText}, Me.ContentSectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnContentSectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ContentSectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ContentSectionCompleted(Me, New ContentSectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/Member_UpdatePackage", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Member_UpdatePackage(ByVal objPackage() As Packagehistory, ByRef resultText As String) As Boolean
            Dim results() As Object = Me.Invoke("Member_UpdatePackage", New Object() {objPackage, resultText})
            resultText = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Member_UpdatePackageAsync(ByVal objPackage() As Packagehistory, ByVal resultText As String)
            Me.Member_UpdatePackageAsync(objPackage, resultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Member_UpdatePackageAsync(ByVal objPackage() As Packagehistory, ByVal resultText As String, ByVal userState As Object)
            If (Me.Member_UpdatePackageOperationCompleted Is Nothing) Then
                Me.Member_UpdatePackageOperationCompleted = AddressOf Me.OnMember_UpdatePackageOperationCompleted
            End If
            Me.InvokeAsync("Member_UpdatePackage", New Object() {objPackage, resultText}, Me.Member_UpdatePackageOperationCompleted, userState)
        End Sub
        
        Private Sub OnMember_UpdatePackageOperationCompleted(ByVal arg As Object)
            If (Not (Me.Member_UpdatePackageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Member_UpdatePackageCompleted(Me, New Member_UpdatePackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/Payment_Paybyvoucher", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Payment_Paybyvoucher(ByRef dsData As System.Data.DataSet, ByRef resultText As String) As Boolean
            Dim results() As Object = Me.Invoke("Payment_Paybyvoucher", New Object() {dsData, resultText})
            dsData = CType(results(1),System.Data.DataSet)
            resultText = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Payment_PaybyvoucherAsync(ByVal dsData As System.Data.DataSet, ByVal resultText As String)
            Me.Payment_PaybyvoucherAsync(dsData, resultText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Payment_PaybyvoucherAsync(ByVal dsData As System.Data.DataSet, ByVal resultText As String, ByVal userState As Object)
            If (Me.Payment_PaybyvoucherOperationCompleted Is Nothing) Then
                Me.Payment_PaybyvoucherOperationCompleted = AddressOf Me.OnPayment_PaybyvoucherOperationCompleted
            End If
            Me.InvokeAsync("Payment_Paybyvoucher", New Object() {dsData, resultText}, Me.Payment_PaybyvoucherOperationCompleted, userState)
        End Sub
        
        Private Sub OnPayment_PaybyvoucherOperationCompleted(ByVal arg As Object)
            If (Not (Me.Payment_PaybyvoucherCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Payment_PaybyvoucherCompleted(Me, New Payment_PaybyvoucherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("pRoMiSeSystem/WriteErrorLogFile", RequestNamespace:="pRoMiSeSystem", ResponseNamespace:="pRoMiSeSystem", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WriteErrorLogFile(ByVal errorFrom As String, ByVal errorString As String, ByVal logFileName As String) As Boolean
            Dim results() As Object = Me.Invoke("WriteErrorLogFile", New Object() {errorFrom, errorString, logFileName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WriteErrorLogFileAsync(ByVal errorFrom As String, ByVal errorString As String, ByVal logFileName As String)
            Me.WriteErrorLogFileAsync(errorFrom, errorString, logFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WriteErrorLogFileAsync(ByVal errorFrom As String, ByVal errorString As String, ByVal logFileName As String, ByVal userState As Object)
            If (Me.WriteErrorLogFileOperationCompleted Is Nothing) Then
                Me.WriteErrorLogFileOperationCompleted = AddressOf Me.OnWriteErrorLogFileOperationCompleted
            End If
            Me.InvokeAsync("WriteErrorLogFile", New Object() {errorFrom, errorString, logFileName}, Me.WriteErrorLogFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnWriteErrorLogFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.WriteErrorLogFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WriteErrorLogFileCompleted(Me, New WriteErrorLogFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Public Enum SearchMemberBy
        
        '''<remarks/>
        MemberCode
        
        '''<remarks/>
        MemberMobile
        
        '''<remarks/>
        MemberName
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class Member_Data
        
        Private memberIDField As Integer
        
        Private memberGroupIDField As Integer
        
        Private memberGroupCodeField As String
        
        Private memberGroupNameField As String
        
        Private memberCodeField As String
        
        Private memberGendorField As Integer
        
        Private memberFirstNameField As String
        
        Private memberLastNameField As String
        
        Private memberAddress1Field As String
        
        Private memberAddress2Field As String
        
        Private memberCityField As String
        
        Private memberProvinceField As Integer
        
        Private memberZipCodeField As String
        
        Private memberTelephoneField As String
        
        Private memberMobileField As String
        
        Private memberFaxField As String
        
        Private memberEmailField As String
        
        Private memberBirthDayField As Date
        
        Private memberActivateField As Integer
        
        Private memberExpirationField As Date
        
        Private memberInputDateField As Date
        
        Private memberLastUseDateField As Date
        
        Private memberUpdatePointField As Date
        
        Private memberUpdaetDateField As Date
        
        Private memberUpdateByField As Integer
        
        Private memberTotalPointField As Decimal
        
        Private memberAdditionalField As String
        
        Private packageDetailField() As packagedetail
        
        '''<remarks/>
        Public Property MemberID() As Integer
            Get
                Return Me.memberIDField
            End Get
            Set
                Me.memberIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberGroupID() As Integer
            Get
                Return Me.memberGroupIDField
            End Get
            Set
                Me.memberGroupIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberGroupCode() As String
            Get
                Return Me.memberGroupCodeField
            End Get
            Set
                Me.memberGroupCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberGroupName() As String
            Get
                Return Me.memberGroupNameField
            End Get
            Set
                Me.memberGroupNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberCode() As String
            Get
                Return Me.memberCodeField
            End Get
            Set
                Me.memberCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberGendor() As Integer
            Get
                Return Me.memberGendorField
            End Get
            Set
                Me.memberGendorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberFirstName() As String
            Get
                Return Me.memberFirstNameField
            End Get
            Set
                Me.memberFirstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberLastName() As String
            Get
                Return Me.memberLastNameField
            End Get
            Set
                Me.memberLastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberAddress1() As String
            Get
                Return Me.memberAddress1Field
            End Get
            Set
                Me.memberAddress1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberAddress2() As String
            Get
                Return Me.memberAddress2Field
            End Get
            Set
                Me.memberAddress2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberCity() As String
            Get
                Return Me.memberCityField
            End Get
            Set
                Me.memberCityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberProvince() As Integer
            Get
                Return Me.memberProvinceField
            End Get
            Set
                Me.memberProvinceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberZipCode() As String
            Get
                Return Me.memberZipCodeField
            End Get
            Set
                Me.memberZipCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberTelephone() As String
            Get
                Return Me.memberTelephoneField
            End Get
            Set
                Me.memberTelephoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberMobile() As String
            Get
                Return Me.memberMobileField
            End Get
            Set
                Me.memberMobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberFax() As String
            Get
                Return Me.memberFaxField
            End Get
            Set
                Me.memberFaxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberEmail() As String
            Get
                Return Me.memberEmailField
            End Get
            Set
                Me.memberEmailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberBirthDay() As Date
            Get
                Return Me.memberBirthDayField
            End Get
            Set
                Me.memberBirthDayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberActivate() As Integer
            Get
                Return Me.memberActivateField
            End Get
            Set
                Me.memberActivateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberExpiration() As Date
            Get
                Return Me.memberExpirationField
            End Get
            Set
                Me.memberExpirationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberInputDate() As Date
            Get
                Return Me.memberInputDateField
            End Get
            Set
                Me.memberInputDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberLastUseDate() As Date
            Get
                Return Me.memberLastUseDateField
            End Get
            Set
                Me.memberLastUseDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberUpdatePoint() As Date
            Get
                Return Me.memberUpdatePointField
            End Get
            Set
                Me.memberUpdatePointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberUpdaetDate() As Date
            Get
                Return Me.memberUpdaetDateField
            End Get
            Set
                Me.memberUpdaetDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberUpdateBy() As Integer
            Get
                Return Me.memberUpdateByField
            End Get
            Set
                Me.memberUpdateByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberTotalPoint() As Decimal
            Get
                Return Me.memberTotalPointField
            End Get
            Set
                Me.memberTotalPointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberAdditional() As String
            Get
                Return Me.memberAdditionalField
            End Get
            Set
                Me.memberAdditionalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageDetail() As packagedetail()
            Get
                Return Me.packageDetailField
            End Get
            Set
                Me.packageDetailField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class packagedetail
        
        Private packageIDField As Integer
        
        Private productLevelIDField As Integer
        
        Private productCodeField As String
        
        Private transactionIDField As Integer
        
        Private computerIDField As Integer
        
        Private orderDetailIDField As Integer
        
        Private expireDateField As Date
        
        Private purchaseDateField As Date
        
        Private memberIDField As Integer
        
        Private packageFirstNameField As String
        
        Private packageLastNameField As String
        
        Private packageDisplayNameField As String
        
        Private packageNumberField As String
        
        Private packageNoteField As String
        
        Private deletedField As Integer
        
        Private updateDateField As Date
        
        Private vATTypeField As Integer
        
        Private packageProductTypeField As Integer
        
        Private packageOriginalAmountField As Integer
        
        Private packageCurrentAmountField As Decimal
        
        Private maxAllowEditAmountField As Integer
        
        Private packagePriceField As Decimal
        
        Private allowUseInShopField As String
        
        Private packageHistoryField() As Packagehistory
        
        '''<remarks/>
        Public Property PackageID() As Integer
            Get
                Return Me.packageIDField
            End Get
            Set
                Me.packageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductLevelID() As Integer
            Get
                Return Me.productLevelIDField
            End Get
            Set
                Me.productLevelIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductCode() As String
            Get
                Return Me.productCodeField
            End Get
            Set
                Me.productCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionID() As Integer
            Get
                Return Me.transactionIDField
            End Get
            Set
                Me.transactionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ComputerID() As Integer
            Get
                Return Me.computerIDField
            End Get
            Set
                Me.computerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrderDetailID() As Integer
            Get
                Return Me.orderDetailIDField
            End Get
            Set
                Me.orderDetailIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpireDate() As Date
            Get
                Return Me.expireDateField
            End Get
            Set
                Me.expireDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PurchaseDate() As Date
            Get
                Return Me.purchaseDateField
            End Get
            Set
                Me.purchaseDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MemberID() As Integer
            Get
                Return Me.memberIDField
            End Get
            Set
                Me.memberIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageFirstName() As String
            Get
                Return Me.packageFirstNameField
            End Get
            Set
                Me.packageFirstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageLastName() As String
            Get
                Return Me.packageLastNameField
            End Get
            Set
                Me.packageLastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageDisplayName() As String
            Get
                Return Me.packageDisplayNameField
            End Get
            Set
                Me.packageDisplayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageNumber() As String
            Get
                Return Me.packageNumberField
            End Get
            Set
                Me.packageNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageNote() As String
            Get
                Return Me.packageNoteField
            End Get
            Set
                Me.packageNoteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Deleted() As Integer
            Get
                Return Me.deletedField
            End Get
            Set
                Me.deletedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdateDate() As Date
            Get
                Return Me.updateDateField
            End Get
            Set
                Me.updateDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VATType() As Integer
            Get
                Return Me.vATTypeField
            End Get
            Set
                Me.vATTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageProductType() As Integer
            Get
                Return Me.packageProductTypeField
            End Get
            Set
                Me.packageProductTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageOriginalAmount() As Integer
            Get
                Return Me.packageOriginalAmountField
            End Get
            Set
                Me.packageOriginalAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageCurrentAmount() As Decimal
            Get
                Return Me.packageCurrentAmountField
            End Get
            Set
                Me.packageCurrentAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxAllowEditAmount() As Integer
            Get
                Return Me.maxAllowEditAmountField
            End Get
            Set
                Me.maxAllowEditAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackagePrice() As Decimal
            Get
                Return Me.packagePriceField
            End Get
            Set
                Me.packagePriceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowUseInShop() As String
            Get
                Return Me.allowUseInShopField
            End Get
            Set
                Me.allowUseInShopField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageHistory() As Packagehistory()
            Get
                Return Me.packageHistoryField
            End Get
            Set
                Me.packageHistoryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class Packagehistory
        
        Private packageHistoryIDField As Integer
        
        Private packageIDField As Integer
        
        Private productLevelIDField As Integer
        
        Private transactionIDField As Integer
        
        Private computerIDField As Integer
        
        Private orderDetailIDField As Integer
        
        Private productCodeField As String
        
        Private packageStatusField As Integer
        
        Private commissionPriceField As Decimal
        
        Private commissionPriceVATField As Decimal
        
        Private additionalPriceField As Decimal
        
        Private packageSessionAmountField As Decimal
        
        Private updatedateField As Date
        
        '''<remarks/>
        Public Property PackageHistoryID() As Integer
            Get
                Return Me.packageHistoryIDField
            End Get
            Set
                Me.packageHistoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageID() As Integer
            Get
                Return Me.packageIDField
            End Get
            Set
                Me.packageIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductLevelID() As Integer
            Get
                Return Me.productLevelIDField
            End Get
            Set
                Me.productLevelIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionID() As Integer
            Get
                Return Me.transactionIDField
            End Get
            Set
                Me.transactionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ComputerID() As Integer
            Get
                Return Me.computerIDField
            End Get
            Set
                Me.computerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OrderDetailID() As Integer
            Get
                Return Me.orderDetailIDField
            End Get
            Set
                Me.orderDetailIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductCode() As String
            Get
                Return Me.productCodeField
            End Get
            Set
                Me.productCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageStatus() As Integer
            Get
                Return Me.packageStatusField
            End Get
            Set
                Me.packageStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CommissionPrice() As Decimal
            Get
                Return Me.commissionPriceField
            End Get
            Set
                Me.commissionPriceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CommissionPriceVAT() As Decimal
            Get
                Return Me.commissionPriceVATField
            End Get
            Set
                Me.commissionPriceVATField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdditionalPrice() As Decimal
            Get
                Return Me.additionalPriceField
            End Get
            Set
                Me.additionalPriceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PackageSessionAmount() As Decimal
            Get
                Return Me.packageSessionAmountField
            End Get
            Set
                Me.packageSessionAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Updatedate() As Date
            Get
                Return Me.updatedateField
            End Get
            Set
                Me.updatedateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class News_SectionData
        
        Private sectionIDField As Integer
        
        Private sectionTitleField As String
        
        Private sectionDescriptionField As String
        
        Private publishedField As Integer
        
        '''<remarks/>
        Public Property SectionID() As Integer
            Get
                Return Me.sectionIDField
            End Get
            Set
                Me.sectionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SectionTitle() As String
            Get
                Return Me.sectionTitleField
            End Get
            Set
                Me.sectionTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SectionDescription() As String
            Get
                Return Me.sectionDescriptionField
            End Get
            Set
                Me.sectionDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Published() As Integer
            Get
                Return Me.publishedField
            End Get
            Set
                Me.publishedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class News_ContentData
        
        Private sectionIDField As Integer
        
        Private categoryIDField As Integer
        
        Private contentIDField As Integer
        
        Private statusField As String
        
        Private titleField As String
        
        Private descriptionField As String
        
        Private detailField As String
        
        Private createdField As Date
        
        Private modifiedField As Date
        
        Private publishedField As Integer
        
        Private startPublishedField As Date
        
        Private finishPublishedField As Date
        
        Private insertStaffIDField As Integer
        
        Private updateStaffIDField As Integer
        
        '''<remarks/>
        Public Property SectionID() As Integer
            Get
                Return Me.sectionIDField
            End Get
            Set
                Me.sectionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CategoryID() As Integer
            Get
                Return Me.categoryIDField
            End Get
            Set
                Me.categoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentID() As Integer
            Get
                Return Me.contentIDField
            End Get
            Set
                Me.contentIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Title() As String
            Get
                Return Me.titleField
            End Get
            Set
                Me.titleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Detail() As String
            Get
                Return Me.detailField
            End Get
            Set
                Me.detailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Created() As Date
            Get
                Return Me.createdField
            End Get
            Set
                Me.createdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Modified() As Date
            Get
                Return Me.modifiedField
            End Get
            Set
                Me.modifiedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Published() As Integer
            Get
                Return Me.publishedField
            End Get
            Set
                Me.publishedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartPublished() As Date
            Get
                Return Me.startPublishedField
            End Get
            Set
                Me.startPublishedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FinishPublished() As Date
            Get
                Return Me.finishPublishedField
            End Get
            Set
                Me.finishPublishedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InsertStaffID() As Integer
            Get
                Return Me.insertStaffIDField
            End Get
            Set
                Me.insertStaffIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdateStaffID() As Integer
            Get
                Return Me.updateStaffIDField
            End Get
            Set
                Me.updateStaffIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class News_CategoryData
        
        Private sectionIDField As Integer
        
        Private categoryIDField As Integer
        
        Private categoryTitleField As String
        
        Private categoryDescriptionField As String
        
        Private contentDetailField() As News_ContentData
        
        Private contentTotalField As Integer
        
        '''<remarks/>
        Public Property SectionID() As Integer
            Get
                Return Me.sectionIDField
            End Get
            Set
                Me.sectionIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CategoryID() As Integer
            Get
                Return Me.categoryIDField
            End Get
            Set
                Me.categoryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CategoryTitle() As String
            Get
                Return Me.categoryTitleField
            End Get
            Set
                Me.categoryTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CategoryDescription() As String
            Get
                Return Me.categoryDescriptionField
            End Get
            Set
                Me.categoryDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentDetail() As News_ContentData()
            Get
                Return Me.contentDetailField
            End Get
            Set
                Me.contentDetailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentTotal() As Integer
            Get
                Return Me.contentTotalField
            End Get
            Set
                Me.contentTotalField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class Softwareversion_Data
        
        Private programTypeIDField As Integer
        
        Private iPHQServerField As String
        
        Private fTPUserNameField As String
        
        Private fTPPasswordField As String
        
        Private updateServerPathField As String
        
        Private fileVersionField As String
        
        Private lastUpdateField As Date
        
        '''<remarks/>
        Public Property ProgramTypeID() As Integer
            Get
                Return Me.programTypeIDField
            End Get
            Set
                Me.programTypeIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IPHQServer() As String
            Get
                Return Me.iPHQServerField
            End Get
            Set
                Me.iPHQServerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTPUserName() As String
            Get
                Return Me.fTPUserNameField
            End Get
            Set
                Me.fTPUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FTPPassword() As String
            Get
                Return Me.fTPPasswordField
            End Get
            Set
                Me.fTPPasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdateServerPath() As String
            Get
                Return Me.updateServerPathField
            End Get
            Set
                Me.updateServerPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileVersion() As String
            Get
                Return Me.fileVersionField
            End Get
            Set
                Me.fileVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastUpdate() As Date
            Get
                Return Me.lastUpdateField
            End Get
            Set
                Me.lastUpdateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="pRoMiSeSystem")>  _
    Partial Public Class SummaryPoint_Data
        
        Private memberIDField As Integer
        
        Private totalPointField As Decimal
        
        Private updatePointField As Date
        
        '''<remarks/>
        Public Property MemberID() As Integer
            Get
                Return Me.memberIDField
            End Get
            Set
                Me.memberIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalPoint() As Decimal
            Get
                Return Me.totalPointField
            End Get
            Set
                Me.totalPointField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UpdatePoint() As Date
            Get
                Return Me.updatePointField
            End Get
            Set
                Me.updatePointField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ExportDataSetToBranchCompletedEventHandler(ByVal sender As Object, ByVal e As ExportDataSetToBranchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExportDataSetToBranchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsResultList() As System.Data.DataSet()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property xResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub AutoUpdateDataSetToHQCompletedEventHandler(ByVal sender As Object, ByVal e As AutoUpdateDataSetToHQCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoUpdateDataSetToHQCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsResult() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ImportRewardPointSummaryAtHQCompletedEventHandler(ByVal sender As Object, ByVal e As ImportRewardPointSummaryAtHQCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportRewardPointSummaryAtHQCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property xResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ImportSummarySaleByDateToHQCompletedEventHandler(ByVal sender As Object, ByVal e As ImportSummarySaleByDateToHQCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportSummarySaleByDateToHQCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property xResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub SearchMemberCompletedEventHandler(ByVal sender As Object, ByVal e As SearchMemberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchMemberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property memberData() As Member_Data()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Member_Data())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsMemberData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetMemberCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property memberData() As Member_Data
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Member_Data)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsMemberData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub AddUpdateMembersAtQHCompletedEventHandler(ByVal sender As Object, ByVal e As AddUpdateMembersAtQHCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddUpdateMembersAtQHCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property xResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub SearchSummaryPointCompletedEventHandler(ByVal sender As Object, ByVal e As SearchSummaryPointCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchSummaryPointCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property memberData() As SummaryPoint_Data
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),SummaryPoint_Data)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub UpdateSoftwareVersionCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateSoftwareVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateSoftwareVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetSoftwareVersionCompletedEventHandler(ByVal sender As Object, ByVal e As GetSoftwareVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSoftwareVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property softwareData() As Softwareversion_Data
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Softwareversion_Data)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ContentLastUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As ContentLastUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ContentLastUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property contentData() As News_CategoryData()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),News_CategoryData())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ContentSectionCompletedEventHandler(ByVal sender As Object, ByVal e As ContentSectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ContentSectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Member_UpdatePackageCompletedEventHandler(ByVal sender As Object, ByVal e As Member_UpdatePackageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Member_UpdatePackageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property resultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Payment_PaybyvoucherCompletedEventHandler(ByVal sender As Object, ByVal e As Payment_PaybyvoucherCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Payment_PaybyvoucherCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property resultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub WriteErrorLogFileCompletedEventHandler(ByVal sender As Object, ByVal e As WriteErrorLogFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WriteErrorLogFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
